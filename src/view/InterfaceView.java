/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;


import javax.swing.JButton;
import view.*;
import controller.*;
import java.awt.Dimension;

import javax.swing.JPanel;

/**
 *
 * @author Formation
 */
public class InterfaceView extends javax.swing.JFrame {

    /**
     * Creates new form Welcome
     */
    public InterfaceView() {
        initComponents();
        this.setSize(new Dimension(1024, 768));
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jpan_toolbar = new javax.swing.JPanel();
        pb_programmedFlight = new javax.swing.JButton();
        pb_waitingFlight = new javax.swing.JButton();
        pb_newFlight = new javax.swing.JButton();
        pb_airports = new javax.swing.JButton();
        pb_newAirports = new javax.swing.JButton();
        pb_users = new javax.swing.JButton();
        pb_newUser = new javax.swing.JButton();
        displayPanel = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(1024, 768));
        setResizable(false);
        setSize(new java.awt.Dimension(1000, 768));
        getContentPane().setLayout(new java.awt.GridBagLayout());

        pb_programmedFlight.setText("vols programmés");
        pb_programmedFlight.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pb_programmedFlightActionPerformed(evt);
            }
        });

        pb_waitingFlight.setText("vols en attente");
        pb_waitingFlight.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pb_waitingFlightActionPerformed(evt);
            }
        });

        pb_newFlight.setText("nouveau vol");
        pb_newFlight.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pb_newFlightActionPerformed(evt);
            }
        });

        pb_airports.setText("aéroport");
        pb_airports.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pb_airportsActionPerformed(evt);
            }
        });

        pb_newAirports.setText("nouvel aéroport");
        pb_newAirports.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pb_newAirportsActionPerformed(evt);
            }
        });

        pb_users.setText("utilisateur");
        pb_users.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pb_usersActionPerformed(evt);
            }
        });

        pb_newUser.setText("nouvel utilisateur");
        pb_newUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pb_newUserActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jpan_toolbarLayout = new javax.swing.GroupLayout(jpan_toolbar);
        jpan_toolbar.setLayout(jpan_toolbarLayout);
        jpan_toolbarLayout.setHorizontalGroup(
            jpan_toolbarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpan_toolbarLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pb_programmedFlight)
                .addGap(18, 18, 18)
                .addComponent(pb_waitingFlight)
                .addGap(18, 18, 18)
                .addComponent(pb_newFlight)
                .addGap(18, 18, 18)
                .addComponent(pb_airports)
                .addGap(18, 18, 18)
                .addComponent(pb_newAirports)
                .addGap(18, 18, 18)
                .addComponent(pb_users)
                .addGap(18, 18, 18)
                .addComponent(pb_newUser)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jpan_toolbarLayout.setVerticalGroup(
            jpan_toolbarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpan_toolbarLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpan_toolbarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pb_programmedFlight)
                    .addComponent(pb_waitingFlight)
                    .addComponent(pb_newFlight)
                    .addComponent(pb_airports)
                    .addComponent(pb_newAirports)
                    .addComponent(pb_users)
                    .addComponent(pb_newUser))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        getContentPane().add(jpan_toolbar, new java.awt.GridBagConstraints());

        displayPanel.setMinimumSize(new java.awt.Dimension(1000, 691));
        displayPanel.setPreferredSize(new java.awt.Dimension(1000, 691));
        displayPanel.addContainerListener(new java.awt.event.ContainerAdapter() {
            public void componentAdded(java.awt.event.ContainerEvent evt) {
                displayPanelComponentAdded(evt);
            }
        });

        javax.swing.GroupLayout displayPanelLayout = new javax.swing.GroupLayout(displayPanel);
        displayPanel.setLayout(displayPanelLayout);
        displayPanelLayout.setHorizontalGroup(
            displayPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1000, Short.MAX_VALUE)
        );
        displayPanelLayout.setVerticalGroup(
            displayPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 691, Short.MAX_VALUE)
        );

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        getContentPane().add(displayPanel, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void pb_airportsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pb_airportsActionPerformed
//        this.displayPanel.removeAll();
//        InterfaceController interfaceController = new InterfaceController();
//
//        this.displayPanel.add(interfaceController.airportsDisplay());

        InterfaceController interfaceController = new InterfaceController();

        this.displayPanel.add(interfaceController.airportsDisplay(this));
        
        validate();
        repaint();
        setVisible(true);
            
     
    }//GEN-LAST:event_pb_airportsActionPerformed

    private void displayPanelComponentAdded(java.awt.event.ContainerEvent evt) {//GEN-FIRST:event_displayPanelComponentAdded
        
    }//GEN-LAST:event_displayPanelComponentAdded

    private void pb_newAirportsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pb_newAirportsActionPerformed
        InterfaceController interfaceController = new InterfaceController();

        this.displayPanel.add(interfaceController.newAirportDisplay(this));
        
        validate();
        repaint();
        setVisible(true);
    }//GEN-LAST:event_pb_newAirportsActionPerformed

    private void pb_programmedFlightActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pb_programmedFlightActionPerformed
        InterfaceController interfaceController = new InterfaceController();

        this.displayPanel.add(interfaceController.plannedFlightDisplay(this));
        
        validate();
        repaint();
        setVisible(true);
    }//GEN-LAST:event_pb_programmedFlightActionPerformed

    private void pb_waitingFlightActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pb_waitingFlightActionPerformed
        InterfaceController interfaceController = new InterfaceController();

        this.displayPanel.add(interfaceController.waitingFlightDisplay(this));
        
        validate();
        repaint();
        setVisible(true);
    }//GEN-LAST:event_pb_waitingFlightActionPerformed

    private void pb_newFlightActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pb_newFlightActionPerformed
        InterfaceController interfaceController = new InterfaceController();

        this.displayPanel.add(interfaceController.newFlightDisplay(this));
        
        validate();
        repaint();
        setVisible(true);
    }//GEN-LAST:event_pb_newFlightActionPerformed

    private void pb_newUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pb_newUserActionPerformed
        InterfaceController interfaceController = new InterfaceController();

        this.displayPanel.add(interfaceController.newUserDisplay(this));
        
        validate();
        repaint();
        setVisible(true);
    }//GEN-LAST:event_pb_newUserActionPerformed

    private void pb_usersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pb_usersActionPerformed
                InterfaceController interfaceController = new InterfaceController();

        this.displayPanel.add(interfaceController.userDisplay(this));
        
        validate();
        repaint();
        setVisible(true);
    }//GEN-LAST:event_pb_usersActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(InterfaceView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(InterfaceView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(InterfaceView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(InterfaceView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new InterfaceView().setVisible(true);
               
            }
        });
    }

    public JButton getPb_airports() {
        return pb_airports;
    }

    public JButton getPb_newAirports() {
        return pb_newAirports;
    }

    public JButton getPb_newFlight() {
        return pb_newFlight;
    }

    public JButton getPb_newUser() {
        return pb_newUser;
    }

    public JButton getPb_programmedFlight() {
        return pb_programmedFlight;
    }

    public JButton getPb_users() {
        return pb_users;
    }

    public JButton getPb_waitingFlight() {
        return pb_waitingFlight;
    }

    public JPanel getDisplayPanel() {
        return displayPanel;
    }

    public void setDisplayPanel(JPanel displayPanel) {
        this.displayPanel = displayPanel;
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel displayPanel;
    private javax.swing.JPanel jpan_toolbar;
    private javax.swing.JButton pb_airports;
    private javax.swing.JButton pb_newAirports;
    private javax.swing.JButton pb_newFlight;
    private javax.swing.JButton pb_newUser;
    private javax.swing.JButton pb_programmedFlight;
    private javax.swing.JButton pb_users;
    private javax.swing.JButton pb_waitingFlight;
    // End of variables declaration//GEN-END:variables
}
